{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\uni\\\\Proyectos 3\\\\mataos\\\\frontend\\\\src\\\\components\\\\Home.js\";\nimport React from 'react';\nimport axios from 'axios'; // Estructura de los datos en React\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class FetchEquipo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      equipo: null,\n      jugadores: null,\n      edadMedia: null,\n      valorTotal: null,\n      valorMedio: null\n    };\n  }\n\n  // Inicio de la petición asincrona a la API\n  async componentDidMount() {\n    const url = \"http://localhost:8000/api/Equipos/?format=json\"; // Await de la función para esperar a la respuesta asincrona y obtener los datos\n\n    const response = await axios.get(url);\n    const data = await response.data; // Cambio del estado de los datos porque llegado aquí ya se han recibido\n\n    this.setState({\n      equipo: data[0],\n      loading: false\n    });\n    console.log(data[0]);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: // Se muestra cargando si no existe la persona o esta cargando\n      this.state.loading || !this.state.equipo ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.equipo.Equipo, this.state.equipo.Jugadores, this.state.equipo.Equipo, this.state.equipo.Equipo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/uni/Proyectos 3/mataos/frontend/src/components/Home.js"],"names":["React","axios","FetchEquipo","Component","state","loading","equipo","jugadores","edadMedia","valorTotal","valorMedio","componentDidMount","url","response","get","data","setState","console","log","render","Equipo","Jugadores"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;AACA,eAAe,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAAyC;AAAA;AAAA;AAAA,SACpDC,KADoD,GAC5C;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,MAAM,EAAE,IAFJ;AAGJC,MAAAA,SAAS,EAAE,IAHP;AAIJC,MAAAA,SAAS,EAAE,IAJP;AAKJC,MAAAA,UAAU,EAAE,IALR;AAMJC,MAAAA,UAAU,EAAE;AANR,KAD4C;AAAA;;AAUpD;AACuB,QAAjBC,iBAAiB,GAAG;AACtB,UAAMC,GAAG,GAAG,gDAAZ,CADsB,CAEtB;;AACA,UAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,CAAvB;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B,CAJsB,CAKtB;;AACA,SAAKC,QAAL,CAAc;AAACV,MAAAA,MAAM,EAAES,IAAI,CAAC,CAAD,CAAb;AAAkBV,MAAAA,OAAO,EAAE;AAA3B,KAAd;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAAC,CAAD,CAAhB;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,gBAEK;AACD,WAAKf,KAAL,CAAWC,OAAX,IAAsB,CAAC,KAAKD,KAAL,CAAWE,MAAlC,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,gBAGI;AAAA,mBACK,KAAKF,KAAL,CAAWE,MAAX,CAAkBc,MADvB,EAEK,KAAKhB,KAAL,CAAWE,MAAX,CAAkBe,SAFvB,EAGK,KAAKjB,KAAL,CAAWE,MAAX,CAAkBc,MAHvB,EAIK,KAAKhB,KAAL,CAAWE,MAAX,CAAkBc,MAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AANR;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AAvCmD","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\n// Estructura de los datos en React\r\nexport default class FetchEquipo extends React.Component{\r\n    state = {\r\n        loading: true,\r\n        equipo: null,\r\n        jugadores: null,\r\n        edadMedia: null,\r\n        valorTotal: null,\r\n        valorMedio: null\r\n    };\r\n\r\n    // Inicio de la petición asincrona a la API\r\n    async componentDidMount() {\r\n        const url = \"http://localhost:8000/api/Equipos/?format=json\";\r\n        // Await de la función para esperar a la respuesta asincrona y obtener los datos\r\n        const response = await axios.get(url);\r\n        const data = await response.data;\r\n        // Cambio del estado de los datos porque llegado aquí ya se han recibido\r\n        this.setState({equipo: data[0], loading: false});\r\n        console.log(data[0]);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                {// Se muestra cargando si no existe la persona o esta cargando\r\n                this.state.loading || !this.state.equipo ? (\r\n                    <div>Loading...</div>\r\n                ) : (\r\n                    <div>\r\n                        {this.state.equipo.Equipo} \r\n                        {this.state.equipo.Jugadores}\r\n                        {this.state.equipo.Equipo}\r\n                        {this.state.equipo.Equipo}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}